# Nginx configuration for scraper cluster load balancing
events {
    worker_connections 1024;
}

http {
    upstream scraper_cluster {
        # Health check enabled servers
        server scraper-node-1:8080 max_fails=3 fail_timeout=30s;
        server scraper-node-2:8080 max_fails=3 fail_timeout=30s;
    }

    # Health check configuration
    server {
        listen 80;
        server_name localhost;

        # Health check endpoint
        location /health {
            proxy_pass http://scraper_cluster;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Health check specific settings
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }

        # Metrics endpoint
        location /metrics {
            proxy_pass http://scraper_cluster;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # API endpoints (if any)
        location /api/ {
            proxy_pass http://scraper_cluster;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Load balancing settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Default location
        location / {
            return 200 'Oikotie Scraper Cluster Load Balancer\n';
            add_header Content-Type text/plain;
        }
    }
}